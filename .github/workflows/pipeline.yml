name: MSPR_Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - main
      - dev


permissions: write-all
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=MatthieuDeroir_arosaje -Dsonar.organization=matthieuderoir -Dsonar.host.url=https://sonarcloud.io -Dsonar.token=${{ secrets.SONAR_TOKEN }} -Dspring.profiles.active=test -Dmaven.test.skip=true
      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v2
        with:
          name: arosaje-jar
          path: target/*.jar
          # Upload the quality gate status to GitHub





  test:
    name: Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Test with Maven
        run: mvn -B test --file pom.xml -Dspring.profiles.active=test

  docker:
    name: Build and push Docker image
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download JAR Artifact
        uses: actions/download-artifact@v2
        with:
          name: arosaje-jar
          path: target
      - name: Build and push Docker image
        run: docker build -t ghcr.io/matthieuderoir/arosaje/arosaje-backend:latest .
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push Docker image
        run: docker push ghcr.io/matthieuderoir/arosaje/arosaje-backend:latest

  deploy:
    needs: docker  # Depends on the successful Docker image build and push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'  # Conditional execution on push to master
    steps:
      - name: Trigger image to render.com  # Triggers the Render deployment using a curl command
        run: curl https://api.render.com/deploy/srv-cncb5eacn0vc73f0abf0?key=03P-7j6L7rs





